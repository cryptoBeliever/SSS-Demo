{"version":3,"sources":["Contents.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","address","setAddress","message","setMessage","isRequest","setIsRequest","useEffect","window","SSS","requestSign","then","signedTx","TransactionHttp","announce","subscribe","x","console","log","err","error","handleChange","state","setState","Root","Header","Typography","variant","Spacer","TextField","fullWidth","label","onChange","e","target","value","Flex","Grid","sx","flexGrow","Button","onClick","tx","TransferTransaction","create","Deadline","Address","createFromRawAddress","PlainMessage","NetworkType","TEST_NET","UInt64","fromUint","setTransaction","margin","styled","border","padding","boxSizing","marginBottom","display","Wrapper","Contents","Program","language","style","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAgGeA,MA7Ef,WACE,MAA8BC,mBAAiB,IAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAiB,IAA/C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,oBAAkB,GAApD,mBAAOK,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACJF,GACFG,OAAOC,IAAIC,cAAcC,MAAK,SAACC,GAC7B,IAAIC,kBAAgB,yCACjBC,SAASF,GACTG,WACC,SAACC,GACCC,QAAQC,IAAI,IAAKF,GACjBV,GAAa,MAEf,SAACa,GACCF,QAAQG,MAAMD,GACdb,GAAa,WAKtB,CAACD,IAEJ,IAAMgB,EAAe,SAACC,EAAeC,GACnCA,EAASD,IAkBX,OACE,eAACE,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,YAApB,kQAIF,cAACC,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,SAAU,SAACC,GAAD,OAAOZ,EAAaY,EAAEC,OAAOC,MAAOjC,QAGlD,cAAC0B,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,SAAU,SAACC,GAAD,OAAOZ,EAAaY,EAAEC,OAAOC,MAAO/B,QAGlD,cAACwB,EAAD,UACE,eAACQ,EAAD,WACE,cAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KACtB,cAACC,EAAA,EAAD,CAAQb,QAAQ,WAAWc,QAxCpB,WACb,IAAMC,EAAKC,sBAAoBC,OAC7BC,WAASD,OAAO,YAChBE,UAAQC,qBAAqB9C,GAC7B,GACA+C,eAAaJ,OAAOzC,GACpB8C,cAAYC,SACZC,SAAOC,SAAS,MAGlB5C,OAAOC,IAAI4C,eAAeX,GAE1BpC,GAAa,IA4BqCgC,GAAI,CAAEgB,OAAQ,OAA1D,4CAWJ9B,EAAO+B,YAAO,MAAPA,CAAc,CACzBD,OAAQ,OACRE,OAAQ,oBACRC,QAAS,OACTC,UAAW,eAGPjC,EAAS8B,YAAO,MAAPA,CAAc,CAC3BI,aAAc,SAEV/B,EAAS2B,YAAO,MAAPA,CAAc,CAC3BD,OAAQ,SAGJlB,EAAOmB,YAAO,MAAPA,CAAc,CACzBK,QAAS,SC8BI7D,EAvIH,WAsHV,OACE,qCACE,cAAC8D,EAAD,UACE,cAACC,EAAD,MAEF,cAACD,EAAD,UACE,eAACE,EAAD,WACE,cAACrC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BACA,cAAC,IAAD,CAAmBqC,SAAS,aAAaC,MAAOA,UAAhD,SA7HQ,66FAwIZJ,EAAUN,YAAO,MAAPA,CAAc,CAC5BD,OAAQ,SAGJS,EAAUR,YAAO,MAAPA,CAAc,CAC5BW,UAAW,SCxIEC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqB1D,MAAK,YAAkD,IAA/C2D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.1280718a.chunk.js","sourcesContent":["import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          Reactで作成したWebアプリケーションへSSSを導入するデモです。テストネットでTransferができます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          Reactで作成したWebアプリケーションへSSSを導入するデモです。テストネットでTransferができます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}