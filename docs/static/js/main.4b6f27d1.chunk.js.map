{"version":3,"sources":["reportWebVitals.ts","pages/Home/index.tsx","pages/Demo0/Contents.tsx","pages/Demo0/index.tsx","pages/Demo1/Contents.tsx","pages/Demo1/index.tsx","pages/Demo2/Contents.tsx","pages/Demo2/index.tsx","pages/Demo3/Contents.tsx","pages/Demo3/index.tsx","pages/Demo4/Contents.tsx","pages/Demo4/index.tsx","pages/Demo5/Contents.tsx","pages/Demo5/index.tsx","pages/Demo6/Contents.tsx","pages/Demo6/index.tsx","pages/Demo7/Contents.tsx","pages/Demo7/index.tsx","pages/Demo8/Contents.tsx","pages/Demo8/index.tsx","pages/Main01/Contents.tsx","pages/Main01/index.tsx","Router.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","navi","useNavigate","useEffect","console","log","Root","Center","Typography","variant","Link","onClick","Space","Divider","styled","margin","padding","color","fontSize","cursor","background","display","justifyContent","marginTop","marginBottom","useState","state","setState","setTimeout","window","isAllowedSSS","e","error","Spacer","href","target","rel","border","boxSizing","Wrapper","Contents","Program","language","style","address","setAddress","message","setMessage","isRequest","setIsRequest","SSS","requestSign","signedTx","TransactionHttp","announce","subscribe","x","err","handleChange","Header","TextField","fullWidth","label","onChange","value","Flex","Grid","sx","flexGrow","Button","tx","TransferTransaction","create","Deadline","Address","createFromRawAddress","PlainMessage","NetworkType","TEST_NET","UInt64","fromUint","setTransaction","Mosaic","MosaicId","Math","pow","mosaics","setMosaics","mosaicId","setMosaicId","map","m","Chip","id","toHex","nameSpace","setNameSpace","ns","NamespaceId","createFromEncoded","address2","setAddress2","publicKey","activePublicKey","acc","PublicAccount","createFromPublicKey","tx1","tx2","agtx","AggregateTransaction","createComplete","toAggregate","requestSignWithCosignatories","account","setAccount","plain","epochAdjustment","networkType","MAIN_NET","marks","isSupplyMutable","setIsSupplyMutable","isTransferable","setIsTransferable","isRestrictable","setIsRestrictable","divisibility","setDivisibility","delta","setDelta","FormControlLabel","control","Checkbox","prev","Slider","defaultValue","getAriaValueText","step","min","max","valueLabelDisplay","Number","duration","nonce","MosaicNonce","createRandom","mosaicDefinitionTransaction","MosaicDefinitionTransaction","createFromNonce","activeAddress","MosaicFlags","mosaicSupplyChangeTransaction","MosaicSupplyChangeTransaction","MosaicSupplyChangeAction","Increase","aggregateTransaction","Router","basename","process","path","element","Home","Demo0","Demo1","Demo2","Demo3","Demo4","Demo5","Demo6","Demo7","Demo8","Main01","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b6f27d1.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from '@emotion/styled'\nimport { Divider, Typography } from '@mui/material'\nimport { useEffect } from 'react'\nimport { useNavigate } from 'react-router'\n\nconst App = () => {\n  const navi = useNavigate()\n\n  useEffect(() => {\n    console.log('home')\n  }, [])\n  return (\n    <Root>\n      <Center>\n        <Typography variant=\"h2\">SSS Extension DEMO List</Typography>\n      </Center>\n      <Link onClick={() => navi('/demo0')}>0. SSSを有効にする</Link>\n      <Link onClick={() => navi('/demo1')}>1. メッセージを送る</Link>\n      <Link onClick={() => navi('/demo2')}>2. xymを送る</Link>\n      <Link onClick={() => navi('/demo3')}>3. モザイクを送る</Link>\n      <Link onClick={() => navi('/demo4')}>4. ネームスペース宛に送信する</Link>\n      <Link onClick={() => navi('/demo5')}>5. 2人に一斉送信する</Link>\n      <Link onClick={() => navi('/demo6')}>6. 連署者と署名を行う</Link>\n      <Link onClick={() => navi('/demo7')}>7. SSSを用いてログインする</Link>\n      <Link onClick={() => navi('/demo8')}>\n        8. モザイクをネームスペースで指定して送る\n      </Link>\n      <Space>\n        <Divider />\n      </Space>\n      <Center>\n        <Typography variant=\"h2\">SSS Extension Main Net Tools</Typography>\n      </Center>\n      <Link onClick={() => navi('/main1')}>1. モザイクの作成</Link>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Link = styled('div')({\n  margin: '8px',\n  padding: '8px',\n  color: 'purple',\n  fontSize: '32px',\n  cursor: 'pointer',\n  background: '#fafafa',\n})\n\nconst Root = styled('div')({\n  margin: '80px',\n})\n\nconst Center = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n})\n\nconst Space = styled('div')({\n  marginTop: '40px',\n  marginBottom: '40px',\n})\n","import React, { useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\n\ninterface SSSWindow extends Window {\n  SSS: object\n  requestSSS: () => void\n  isAllowedSSS: () => boolean\n}\ndeclare const window: SSSWindow\n\ntype State = 'ACTIVE' | 'INACTIVE' | 'NONE' | 'LOADING'\n\nfunction App() {\n  const [state, setState] = useState<State>('LOADING')\n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        if (window.isAllowedSSS()) {\n          console.log('ACTIVE')\n          setState('ACTIVE')\n        } else {\n          console.log('INACTIVE')\n          setState('INACTIVE')\n        }\n      } catch (e) {\n        console.error(e)\n        setState('NONE')\n      }\n    }, 500) // SSSのプログラムがwindowに挿入されるよりも後に実行するために遅らせる\n  }, [])\n\n  if (state === 'LOADING') {\n    return <Root>Now Loading...</Root>\n  }\n\n  if (state === 'NONE') {\n    return (\n      <Root>\n        <Spacer>\n          SSSがinstallされていません。\n          <a\n            href=\"https://chrome.google.com/webstore/detail/sss-extension/llildiojemakefgnhhkmiiffonembcan\"\n            target=\"_blank\"\n            rel=\"noreferrer\">\n            SSS Extensionをinstallする\n          </a>\n        </Spacer>\n      </Root>\n    )\n  }\n\n  if (state === 'INACTIVE') {\n    return (\n      <Root>\n        <Spacer>SSSが有効になっていません。</Spacer>\n      </Root>\n    )\n  }\n\n  return (\n    <Root>\n      <Spacer>SSSが有効になっています。Let's enjoy Symbol with SSS!</Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\n\ninterface SSSWindow extends Window {\n  SSS: object\n  requestSSS: () => void\n  isAllowedSSS: () => boolean\n}\ndeclare const window: SSSWindow\n\ntype State = 'ACTIVE' | 'INACTIVE' | 'NONE' | 'LOADING'\n\nfunction App() {\n  const [state, setState] = useState<State>('LOADING')\n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        if (window.isAllowedSSS()) {\n          setState('ACTIVE')\n        } else {\n          setState('INACTIVE')\n        }\n      } catch (e) {\n        console.error(e)\n        setState('NONE')\n      }\n    }, 200) // SSSのプログラムがwindowに挿入されるよりも後に実行するために遅らせる\n  }, [])\n\n  if (state === 'LOADING') {\n    return <Root>Now Loading...</Root>\n  }\n\n  if (state === 'NONE') {\n    return (\n      <Root>\n        <Spacer>\n          SSSがinstallされていません。\n          <a\n            href=\"https://chrome.google.com/webstore/detail/sss-extension/llildiojemakefgnhhkmiiffonembcan\"\n            target=\"_blank\"\n            rel=\"noreferrer\">\n            SSS Extensionをinstallする\n          </a>\n        </Spacer>\n      </Root>\n    )\n  }\n\n  if (state === 'INACTIVE') {\n    return (\n      <Root>\n        <Spacer>SSSが有効になっていません。</Spacer>\n      </Root>\n    )\n  }\n\n  return (\n    <Root>\n      <Spacer>SSSが有効になっています。Let's enjoy Symbol with SSS!</Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Account,\n  Address,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          Reactで作成したWebアプリケーションへSSSを導入するデモです。テストネットでTransferができます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          Reactで作成したWebアプリケーションへSSSを導入するデモです。テストネットでTransferができます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  MosaicId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [\n        new Mosaic(\n          new MosaicId('3A8416DB2D53B6C8'),\n          UInt64.fromUint(Math.pow(10, 6))\n        ),\n      ],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          xymを送金することができます。1xymの送金です。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  MosaicId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [\n        new Mosaic(\n          new MosaicId('3A8416DB2D53B6C8'),\n          UInt64.fromUint(Math.pow(10, 6))\n        ),\n      ],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          xymを送金することができます。1xymの送金です。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Chip, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  MosaicId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [mosaics, setMosaics] = useState<Mosaic[]>([])\n  const [mosaicId, setMosaicId] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      mosaics,\n      PlainMessage.create('send mosaics'),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  const addMosaic = () => {\n    console.log('id')\n    setMosaics([\n      ...mosaics,\n      new Mosaic(new MosaicId(mosaicId), UInt64.fromUint(1)),\n    ])\n    setMosaicId('')\n  }\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          複数のモザイクを送ることができます。1モザイク送信します。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"MosaicID\"\n          onChange={(e) => handleChange(e.target.value, setMosaicId)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={addMosaic} sx={{ margin: '8px' }}>\n            モザイクを追加\n          </Button>\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n      <Spacer>\n        {mosaics.map((m) => {\n          return (\n            <span key={m.id.toHex()}>\n              <Chip label={m.id.toHex()} />\n            </span>\n          )\n        })}\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Chip, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  MosaicId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [mosaics, setMosaics] = useState<Mosaic[]>([])\n  const [mosaicId, setMosaicId] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      mosaics,\n      PlainMessage.create('send mosaics'),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  const addMosaic = () => {\n    console.log('id')\n    setMosaics([\n      ...mosaics,\n      new Mosaic(new MosaicId(mosaicId), UInt64.fromUint(1)),\n    ])\n    setMosaicId('')\n  }\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          複数のモザイクを送ることができます。1モザイク送信します。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"MosaicID\"\n          onChange={(e) => handleChange(e.target.value, setMosaicId)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={addMosaic} sx={{ margin: '8px' }}>\n            モザイクを追加\n          </Button>\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n      <Spacer>\n        {mosaics.map((m) => {\n          return (\n            <span key={m.id.toHex()}>\n              <Chip label={m.id.toHex()} />\n            </span>\n          )\n        })}\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Deadline,\n  NamespaceId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [nameSpace, setNameSpace] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const ns = new NamespaceId(nameSpace)\n\n    console.log('onegai', NamespaceId.createFromEncoded(ns.id.toHex()))\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      new NamespaceId(nameSpace),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          ネームスペース指定でメッセージを送れます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"NameSpace\"\n          onChange={(e) => handleChange(e.target.value, setNameSpace)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Deadline,\n  NamespaceId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [nameSpace, setNameSpace] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const ns = new NamespaceId(nameSpace)\n\n    console.log('onegai', NamespaceId.createFromEncoded(ns.id.toHex()))\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      new NamespaceId(nameSpace),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          ネームスペース指定でメッセージを送れます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"NameSpace\"\n          onChange={(e) => handleChange(e.target.value, setNameSpace)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [address2, setAddress2] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const publicKey = window.SSS.activePublicKey\n    const acc = PublicAccount.createFromPublicKey(\n      publicKey,\n      NetworkType.TEST_NET\n    )\n    const tx1 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n    const tx2 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address2),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(1637848847),\n      [tx1.toAggregate(acc), tx2.toAggregate(acc)],\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(2000000)\n    )\n    window.SSS.setTransaction(agtx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          2人にxymを送金することができます。1xymの送金です。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address (2人目)\"\n          onChange={(e) => handleChange(e.target.value, setAddress2)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [address2, setAddress2] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const publicKey = window.SSS.activePublicKey\n    const acc = PublicAccount.createFromPublicKey(\n      publicKey,\n      NetworkType.TEST_NET\n    )\n    const tx1 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n    const tx2 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address2),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(1637848847),\n      [tx1.toAggregate(acc), tx2.toAggregate(acc)],\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(2000000)\n    )\n    window.SSS.setTransaction(agtx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          2人にxymを送金することができます。1xymの送金です。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address (2人目)\"\n          onChange={(e) => handleChange(e.target.value, setAddress2)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [address2, setAddress2] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      console.log(window.SSS.requestSignWithCosignatories)\n      window.SSS.requestSignWithCosignatories([]).then(\n        (signedTx: SignedTransaction) => {\n          new TransactionHttp('https://sym-test.opening-line.jp:3001')\n            .announce(signedTx)\n            .subscribe(\n              (x) => {\n                console.log('x', x)\n                setIsRequest(false)\n              },\n              (err) => {\n                console.error(err)\n                setIsRequest(false)\n              }\n            )\n        }\n      )\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const publicKey = window.SSS.activePublicKey\n    const acc = PublicAccount.createFromPublicKey(\n      publicKey,\n      NetworkType.TEST_NET\n    )\n    const tx1 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n    const tx2 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address2),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(1637848847),\n      [tx1.toAggregate(acc), tx2.toAggregate(acc)],\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(2000000)\n    )\n    window.SSS.setTransaction(agtx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          連署者を指定して署名を行う。requestSignWithCosignatoriesのサンプルです。\n          signTransactionWithCosignatories で署名が行われます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address (2人目)\"\n          onChange={(e) => handleChange(e.target.value, setAddress2)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\nconst App = () => {\n  const codeString = `\n  import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [address2, setAddress2] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      console.log(window.SSS.requestSignWithCosignatories)\n      window.SSS.requestSignWithCosignatories([]).then(\n        (signedTx: SignedTransaction) => {\n          new TransactionHttp('https://sym-test.opening-line.jp:3001')\n            .announce(signedTx)\n            .subscribe(\n              (x) => {\n                console.log('x', x)\n                setIsRequest(false)\n              },\n              (err) => {\n                console.error(err)\n                setIsRequest(false)\n              }\n            )\n        }\n      )\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const publicKey = window.SSS.activePublicKey\n    const acc = PublicAccount.createFromPublicKey(\n      publicKey,\n      NetworkType.TEST_NET\n    )\n    const tx1 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n    const tx2 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address2),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(1637848847),\n      [tx1.toAggregate(acc), tx2.toAggregate(acc)],\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(2000000)\n    )\n    window.SSS.setTransaction(agtx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          連署者を指定して署名を行う。requestSignWithCosignatoriesのサンプルです。\n          signTransactionWithCosignatories で署名が行われます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address (2人目)\"\n          onChange={(e) => handleChange(e.target.value, setAddress2)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { NetworkType, PublicAccount } from 'symbol-sdk'\nimport { Button } from '@mui/material'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [account, setAccount] = useState<PublicAccount | null>(null)\n\n  const login = () => {\n    if (!window.SSS) {\n      console.log('not installed')\n    } else {\n      console.log('installed', window.SSS.activePublicKey)\n      const acc = PublicAccount.createFromPublicKey(\n        window.SSS.activePublicKey,\n        NetworkType.TEST_NET\n      )\n      setAccount(acc)\n    }\n  }\n\n  return (\n    <Root>\n      {account ? (\n        <Spacer>\n          ログイン成功\n          <Spacer>Address : {account.address.plain()}</Spacer>\n          <Spacer>PublicKey : {account.publicKey}</Spacer>\n        </Spacer>\n      ) : (\n        <Spacer>\n          <Button onClick={login}>LOGIN</Button>\n        </Spacer>\n      )}\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { NetworkType, PublicAccount } from 'symbol-sdk'\nimport { Button } from '@mui/material'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [account, setAccount] = useState<PublicAccount | null>(null)\n\n  const login = () => {\n    if (!window.SSS) {\n      console.log('not installed')\n    } else {\n      console.log('installed', window.SSS.activePublicKey)\n      const acc = PublicAccount.createFromPublicKey(\n        window.SSS.activePublicKey,\n        NetworkType.TEST_NET\n      )\n      setAccount(acc)\n    }\n  }\n\n  return (\n    <Root>\n      {account ? (\n        <Spacer>\n          ログイン成功\n          <Spacer>Address : {account.address.plain()}</Spacer>\n          <Spacer>PublicKey : {account.publicKey}</Spacer>\n        </Spacer>\n      ) : (\n        <Spacer>\n          <Button onClick={login}>LOGIN</Button>\n        </Spacer>\n      )}\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  NamespaceId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [nameSpace, setNameSpace] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const ns = new NamespaceId(nameSpace)\n\n    console.log('onegai', NamespaceId.createFromEncoded(ns.id.toHex()))\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [new Mosaic(new NamespaceId(nameSpace), UInt64.fromUint(1))],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          ネームスペース指定でメッセージを送れます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Mosaic NameSpace\"\n          onChange={(e) => handleChange(e.target.value, setNameSpace)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  NamespaceId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [nameSpace, setNameSpace] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const ns = new NamespaceId(nameSpace)\n\n    console.log('onegai', NamespaceId.createFromEncoded(ns.id.toHex()))\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [new Mosaic(new NamespaceId(nameSpace), UInt64.fromUint(1))],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          ネームスペース指定でメッセージを送れます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Mosaic NameSpace\"\n          onChange={(e) => handleChange(e.target.value, setNameSpace)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Slider,\n  TextField,\n} from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  MosaicDefinitionTransaction,\n  MosaicFlags,\n  MosaicId,\n  MosaicNonce,\n  MosaicSupplyChangeAction,\n  MosaicSupplyChangeTransaction,\n  NetworkType,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nconst epochAdjustment = 1615853185\nconst networkType = NetworkType.MAIN_NET\nconst node_url = 'https://sym-main.opening-line.jp:3001'\n\nconst marks = [\n  {\n    value: 0,\n    label: '0',\n  },\n  {\n    value: 1,\n    label: '1',\n  },\n  {\n    value: 2,\n    label: '2',\n  },\n  {\n    value: 3,\n    label: '3',\n  },\n  {\n    value: 4,\n    label: '4',\n  },\n  {\n    value: 5,\n    label: '5',\n  },\n  {\n    value: 6,\n    label: '6',\n  },\n]\n\nfunction App() {\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  const [isSupplyMutable, setIsSupplyMutable] = useState<boolean>(false)\n  const [isTransferable, setIsTransferable] = useState<boolean>(false)\n  const [isRestrictable, setIsRestrictable] = useState<boolean>(false)\n  const [divisibility, setDivisibility] = useState<number>(0)\n  const [delta, setDelta] = useState<number>(1000000)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp(node_url).announce(signedTx).subscribe(\n          (x) => {\n            console.log('x', x)\n            setIsRequest(false)\n          },\n          (err) => {\n            console.error(err)\n            setIsRequest(false)\n          }\n        )\n      })\n    }\n  }, [isRequest])\n\n  const submit = () => {\n    const duration = UInt64.fromUint(0)\n\n    const nonce = MosaicNonce.createRandom()\n    const mosaicDefinitionTransaction = MosaicDefinitionTransaction.create(\n      Deadline.create(epochAdjustment),\n      nonce,\n      MosaicId.createFromNonce(\n        nonce,\n        Address.createFromRawAddress(window.SSS.activeAddress)\n      ),\n      MosaicFlags.create(isSupplyMutable, isTransferable, isRestrictable),\n      divisibility,\n      duration,\n      networkType\n    )\n\n    const mosaicSupplyChangeTransaction = MosaicSupplyChangeTransaction.create(\n      Deadline.create(epochAdjustment),\n      mosaicDefinitionTransaction.mosaicId,\n      MosaicSupplyChangeAction.Increase,\n      UInt64.fromUint(delta * Math.pow(10, divisibility)),\n      networkType\n    )\n\n    const aggregateTransaction = AggregateTransaction.createComplete(\n      Deadline.create(epochAdjustment),\n      [\n        mosaicDefinitionTransaction.toAggregate(\n          PublicAccount.createFromPublicKey(\n            window.SSS.activePublicKey,\n            networkType\n          )\n        ),\n        mosaicSupplyChangeTransaction.toAggregate(\n          PublicAccount.createFromPublicKey(\n            window.SSS.activePublicKey,\n            networkType\n          )\n        ),\n      ],\n      networkType,\n      [],\n      UInt64.fromUint(100000)\n    )\n\n    window.SSS.setTransaction(aggregateTransaction)\n\n    setIsRequest(true)\n  }\n\n  function valuetext(value: number) {\n    return `${value}°C!`\n  }\n\n  return (\n    <Root>\n      <Spacer>\n        <Flex>\n          <FormControlLabel\n            label=\"供給量の変更ができるか\"\n            control={\n              <Checkbox onChange={() => setIsSupplyMutable((prev) => !prev)} />\n            }\n          />\n        </Flex>\n        <Flex>\n          <FormControlLabel\n            label=\"第三者へと譲渡できるか\"\n            control={\n              <Checkbox onChange={() => setIsTransferable((prev) => !prev)} />\n            }\n          />\n        </Flex>\n        <Flex>\n          <FormControlLabel\n            label=\"モザイク制限\"\n            control={\n              <Checkbox onChange={() => setIsRestrictable((prev) => !prev)} />\n            }\n          />\n        </Flex>\n        <Flex>可分性</Flex>\n        <Flex>\n          <Slider\n            aria-label=\"Always visible\"\n            defaultValue={0}\n            getAriaValueText={valuetext}\n            step={1}\n            min={0}\n            max={6}\n            marks={marks}\n            onChange={(e: any) => setDivisibility(e.target.value)}\n            valueLabelDisplay=\"auto\"\n          />\n        </Flex>\n        <Flex>\n          <TextField\n            fullWidth\n            label=\"発行量\"\n            onChange={(e) => setDelta(Number(e.target.value))}\n          />\n        </Flex>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n  margin: '8px',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n","import React from 'react'\nimport { Routes, Route } from 'react-router'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Demo0 from './pages/Demo0'\nimport Demo1 from './pages/Demo1'\nimport Demo2 from './pages/Demo2'\nimport Demo3 from './pages/Demo3'\nimport Demo4 from './pages/Demo4'\nimport Demo5 from './pages/Demo5'\nimport Demo6 from './pages/Demo6'\nimport Demo7 from './pages/Demo7'\nimport Demo8 from './pages/Demo8'\n// import Demo9 from './pages/Demo9'\n// import Demo10 from './pages/Demo10'\n// import Demo12 from './pages/Demo12'\n// import Demo11 from './pages/Demo11'\n\nimport Main01 from './pages/Main01'\n\nconst Router: React.VFC = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      {/* <BrowserRouter> */}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/demo0\" element={<Demo0 />} />\n        <Route path=\"/demo1\" element={<Demo1 />} />\n        <Route path=\"/demo2\" element={<Demo2 />} />\n        <Route path=\"/demo3\" element={<Demo3 />} />\n        <Route path=\"/demo4\" element={<Demo4 />} />\n        <Route path=\"/demo5\" element={<Demo5 />} />\n        <Route path=\"/demo6\" element={<Demo6 />} />\n        <Route path=\"/demo7\" element={<Demo7 />} />\n        <Route path=\"/demo8\" element={<Demo8 />} />\n        {/* <Route path=\"/demo9\" element={<Demo9 />} />\n        <Route path=\"/demo10\" element={<Demo10 />} /> */}\n        {/* <Route path=\"/demo11\" element={<Demo11 />} />\n        <Route path=\"/demo12\" element={<Demo12 />} /> */}\n\n        <Route path=\"/main1\" element={<Main01 />} />\n      </Routes>\n    </BrowserRouter>\n  )\n}\nexport default Router\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport Router from './Router'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}