{"version":3,"sources":["reportWebVitals.ts","pages/Home/index.tsx","pages/Demo0/Contents.tsx","pages/Demo0/index.tsx","pages/Demo1/Contents.tsx","pages/Demo1/index.tsx","pages/Demo2/Contents.tsx","pages/Demo2/index.tsx","pages/Demo3/Contents.tsx","pages/Demo3/index.tsx","pages/Demo4/Contents.tsx","pages/Demo4/index.tsx","pages/Demo5/Contents.tsx","pages/Demo5/index.tsx","pages/Demo6/Contents.tsx","pages/Demo6/index.tsx","pages/Demo7/Contents.tsx","pages/Demo7/index.tsx","pages/Demo8/Contents.tsx","pages/Demo8/index.tsx","Router.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","navi","useNavigate","Root","Center","Typography","variant","Link","onClick","styled","margin","padding","color","fontSize","cursor","background","display","justifyContent","useState","state","setState","useEffect","setTimeout","window","isAllowedSSS","e","console","error","Spacer","href","target","rel","border","boxSizing","Wrapper","Contents","Program","language","style","marginTop","address","setAddress","message","setMessage","isRequest","setIsRequest","SSS","requestSign","signedTx","TransactionHttp","announce","subscribe","x","log","err","handleChange","Header","TextField","fullWidth","label","onChange","value","Flex","Grid","sx","flexGrow","Button","tx","TransferTransaction","create","Deadline","Address","createFromRawAddress","PlainMessage","NetworkType","TEST_NET","UInt64","fromUint","setTransaction","marginBottom","Mosaic","MosaicId","Math","pow","mosaics","setMosaics","mosaicId","setMosaicId","map","m","Chip","id","toHex","nameSpace","setNameSpace","ns","NamespaceId","createFromEncoded","address2","setAddress2","publicKey","activePublicKey","acc","PublicAccount","createFromPublicKey","tx1","tx2","agtx","AggregateTransaction","createComplete","toAggregate","requestSignWithCosignatories","account","setAccount","plain","Router","basename","process","path","element","Home","Demo0","Demo1","Demo2","Demo3","Demo4","Demo5","Demo6","Demo7","Demo8","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.192251eb.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport { useNavigate } from 'react-router'\n\nconst App = () => {\n  const navi = useNavigate()\n  return (\n    <Root>\n      <Center>\n        <Typography variant=\"h2\">SSS Extension DEMO List</Typography>\n      </Center>\n      <Link onClick={() => navi('/demo0')}>0. SSSを有効にする</Link>\n      <Link onClick={() => navi('/demo1')}>1. メッセージを送る</Link>\n      <Link onClick={() => navi('/demo2')}>2. xymを送る</Link>\n      <Link onClick={() => navi('/demo3')}>3. モザイクを送る</Link>\n      <Link onClick={() => navi('/demo4')}>4. ネームスペース宛に送信する</Link>\n      <Link onClick={() => navi('/demo5')}>5. 2人に一斉送信する</Link>\n      <Link onClick={() => navi('/demo6')}>6. 連署者と署名を行う</Link>\n      <Link onClick={() => navi('/demo7')}>7. SSSを用いてログインする</Link>\n      <Link onClick={() => navi('/demo8')}>\n        8. モザイクをネームスペースで指定して送る\n      </Link>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Link = styled('div')({\n  margin: '8px',\n  padding: '8px',\n  color: 'purple',\n  fontSize: '32px',\n  cursor: 'pointer',\n  background: '#fafafa',\n})\n\nconst Root = styled('div')({\n  margin: '80px',\n})\n\nconst Center = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n})\n","import React, { useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\n\ninterface SSSWindow extends Window {\n  SSS: object\n  requestSSS: () => void\n  isAllowedSSS: () => boolean\n}\ndeclare const window: SSSWindow\n\ntype State = 'ACTIVE' | 'INACTIVE' | 'NONE' | 'LOADING'\n\nfunction App() {\n  const [state, setState] = useState<State>('LOADING')\n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        if (window.isAllowedSSS()) {\n          setState('ACTIVE')\n        } else {\n          setState('INACTIVE')\n        }\n      } catch (e) {\n        console.error(e)\n        setState('NONE')\n      }\n    }, 200) // SSSのプログラムがwindowに挿入されるよりも後に実行するために遅らせる\n  }, [])\n\n  if (state === 'LOADING') {\n    return <Root>Now Loading...</Root>\n  }\n\n  if (state === 'NONE') {\n    return (\n      <Root>\n        <Spacer>\n          SSSがinstallされていません。\n          <a\n            href=\"https://chrome.google.com/webstore/detail/sss-extension/llildiojemakefgnhhkmiiffonembcan\"\n            target=\"_blank\"\n            rel=\"noreferrer\">\n            SSS Extensionをinstallする\n          </a>\n        </Spacer>\n      </Root>\n    )\n  }\n\n  if (state === 'INACTIVE') {\n    return (\n      <Root>\n        <Spacer>SSSが有効になっていません。</Spacer>\n      </Root>\n    )\n  }\n\n  return (\n    <Root>\n      <Spacer>SSSが有効になっています。Let's enjoy Symbol with SSS!</Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\n\ninterface SSSWindow extends Window {\n  SSS: object\n  requestSSS: () => void\n  isAllowedSSS: () => boolean\n}\ndeclare const window: SSSWindow\n\ntype State = 'ACTIVE' | 'INACTIVE' | 'NONE' | 'LOADING'\n\nfunction App() {\n  const [state, setState] = useState<State>('LOADING')\n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        if (window.isAllowedSSS()) {\n          setState('ACTIVE')\n        } else {\n          setState('INACTIVE')\n        }\n      } catch (e) {\n        console.error(e)\n        setState('NONE')\n      }\n    }, 200) // SSSのプログラムがwindowに挿入されるよりも後に実行するために遅らせる\n  }, [])\n\n  if (state === 'LOADING') {\n    return <Root>Now Loading...</Root>\n  }\n\n  if (state === 'NONE') {\n    return (\n      <Root>\n        <Spacer>\n          SSSがinstallされていません。\n          <a\n            href=\"https://chrome.google.com/webstore/detail/sss-extension/llildiojemakefgnhhkmiiffonembcan\"\n            target=\"_blank\"\n            rel=\"noreferrer\">\n            SSS Extensionをinstallする\n          </a>\n        </Spacer>\n      </Root>\n    )\n  }\n\n  if (state === 'INACTIVE') {\n    return (\n      <Root>\n        <Spacer>SSSが有効になっていません。</Spacer>\n      </Root>\n    )\n  }\n\n  return (\n    <Root>\n      <Spacer>SSSが有効になっています。Let's enjoy Symbol with SSS!</Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          Reactで作成したWebアプリケーションへSSSを導入するデモです。テストネットでTransferができます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          Reactで作成したWebアプリケーションへSSSを導入するデモです。テストネットでTransferができます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  MosaicId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [\n        new Mosaic(\n          new MosaicId('3A8416DB2D53B6C8'),\n          UInt64.fromUint(Math.pow(10, 6))\n        ),\n      ],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          xymを送金することができます。1xymの送金です。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  MosaicId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [\n        new Mosaic(\n          new MosaicId('3A8416DB2D53B6C8'),\n          UInt64.fromUint(Math.pow(10, 6))\n        ),\n      ],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          xymを送金することができます。1xymの送金です。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Chip, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  MosaicId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [mosaics, setMosaics] = useState<Mosaic[]>([])\n  const [mosaicId, setMosaicId] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      mosaics,\n      PlainMessage.create('send mosaics'),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  const addMosaic = () => {\n    console.log('id')\n    setMosaics([\n      ...mosaics,\n      new Mosaic(new MosaicId(mosaicId), UInt64.fromUint(1)),\n    ])\n    setMosaicId('')\n  }\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          複数のモザイクを送ることができます。1モザイク送信します。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"MosaicID\"\n          onChange={(e) => handleChange(e.target.value, setMosaicId)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={addMosaic} sx={{ margin: '8px' }}>\n            モザイクを追加\n          </Button>\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n      <Spacer>\n        {mosaics.map((m) => {\n          return (\n            <span key={m.id.toHex()}>\n              <Chip label={m.id.toHex()} />\n            </span>\n          )\n        })}\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Chip, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  MosaicId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [mosaics, setMosaics] = useState<Mosaic[]>([])\n  const [mosaicId, setMosaicId] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      mosaics,\n      PlainMessage.create('send mosaics'),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  const addMosaic = () => {\n    console.log('id')\n    setMosaics([\n      ...mosaics,\n      new Mosaic(new MosaicId(mosaicId), UInt64.fromUint(1)),\n    ])\n    setMosaicId('')\n  }\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          複数のモザイクを送ることができます。1モザイク送信します。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"MosaicID\"\n          onChange={(e) => handleChange(e.target.value, setMosaicId)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={addMosaic} sx={{ margin: '8px' }}>\n            モザイクを追加\n          </Button>\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n      <Spacer>\n        {mosaics.map((m) => {\n          return (\n            <span key={m.id.toHex()}>\n              <Chip label={m.id.toHex()} />\n            </span>\n          )\n        })}\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Deadline,\n  NamespaceId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [nameSpace, setNameSpace] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const ns = new NamespaceId(nameSpace)\n\n    console.log('onegai', NamespaceId.createFromEncoded(ns.id.toHex()))\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      new NamespaceId(nameSpace),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          ネームスペース指定でメッセージを送れます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"NameSpace\"\n          onChange={(e) => handleChange(e.target.value, setNameSpace)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Deadline,\n  NamespaceId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [nameSpace, setNameSpace] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const ns = new NamespaceId(nameSpace)\n\n    console.log('onegai', NamespaceId.createFromEncoded(ns.id.toHex()))\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      new NamespaceId(nameSpace),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          ネームスペース指定でメッセージを送れます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"NameSpace\"\n          onChange={(e) => handleChange(e.target.value, setNameSpace)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [address2, setAddress2] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const publicKey = window.SSS.activePublicKey\n    const acc = PublicAccount.createFromPublicKey(\n      publicKey,\n      NetworkType.TEST_NET\n    )\n    const tx1 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n    const tx2 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address2),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(1637848847),\n      [tx1.toAggregate(acc), tx2.toAggregate(acc)],\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(2000000)\n    )\n    window.SSS.setTransaction(agtx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          2人にxymを送金することができます。1xymの送金です。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address (2人目)\"\n          onChange={(e) => handleChange(e.target.value, setAddress2)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [address2, setAddress2] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const publicKey = window.SSS.activePublicKey\n    const acc = PublicAccount.createFromPublicKey(\n      publicKey,\n      NetworkType.TEST_NET\n    )\n    const tx1 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n    const tx2 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address2),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(1637848847),\n      [tx1.toAggregate(acc), tx2.toAggregate(acc)],\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(2000000)\n    )\n    window.SSS.setTransaction(agtx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          2人にxymを送金することができます。1xymの送金です。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address (2人目)\"\n          onChange={(e) => handleChange(e.target.value, setAddress2)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [address2, setAddress2] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      console.log(window.SSS.requestSignWithCosignatories)\n      window.SSS.requestSignWithCosignatories([]).then(\n        (signedTx: SignedTransaction) => {\n          new TransactionHttp('https://sym-test.opening-line.jp:3001')\n            .announce(signedTx)\n            .subscribe(\n              (x) => {\n                console.log('x', x)\n                setIsRequest(false)\n              },\n              (err) => {\n                console.error(err)\n                setIsRequest(false)\n              }\n            )\n        }\n      )\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const publicKey = window.SSS.activePublicKey\n    const acc = PublicAccount.createFromPublicKey(\n      publicKey,\n      NetworkType.TEST_NET\n    )\n    const tx1 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n    const tx2 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address2),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(1637848847),\n      [tx1.toAggregate(acc), tx2.toAggregate(acc)],\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(2000000)\n    )\n    window.SSS.setTransaction(agtx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          連署者を指定して署名を行う。requestSignWithCosignatoriesのサンプルです。\n          signTransactionWithCosignatories で署名が行われます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address (2人目)\"\n          onChange={(e) => handleChange(e.target.value, setAddress2)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\nconst App = () => {\n  const codeString = `\n  import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  PlainMessage,\n  PublicAccount,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [address2, setAddress2] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      console.log(window.SSS.requestSignWithCosignatories)\n      window.SSS.requestSignWithCosignatories([]).then(\n        (signedTx: SignedTransaction) => {\n          new TransactionHttp('https://sym-test.opening-line.jp:3001')\n            .announce(signedTx)\n            .subscribe(\n              (x) => {\n                console.log('x', x)\n                setIsRequest(false)\n              },\n              (err) => {\n                console.error(err)\n                setIsRequest(false)\n              }\n            )\n        }\n      )\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const publicKey = window.SSS.activePublicKey\n    const acc = PublicAccount.createFromPublicKey(\n      publicKey,\n      NetworkType.TEST_NET\n    )\n    const tx1 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n    const tx2 = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address2),\n      [],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(1637848847),\n      [tx1.toAggregate(acc), tx2.toAggregate(acc)],\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(2000000)\n    )\n    window.SSS.setTransaction(agtx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          連署者を指定して署名を行う。requestSignWithCosignatoriesのサンプルです。\n          signTransactionWithCosignatories で署名が行われます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address (2人目)\"\n          onChange={(e) => handleChange(e.target.value, setAddress2)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { NetworkType, PublicAccount } from 'symbol-sdk'\nimport { Button } from '@mui/material'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [account, setAccount] = useState<PublicAccount | null>(null)\n\n  const login = () => {\n    if (!window.SSS) {\n      console.log('not installed')\n    } else {\n      console.log('installed', window.SSS.activePublicKey)\n      const acc = PublicAccount.createFromPublicKey(\n        window.SSS.activePublicKey,\n        NetworkType.TEST_NET\n      )\n      setAccount(acc)\n    }\n  }\n\n  return (\n    <Root>\n      {account ? (\n        <Spacer>\n          ログイン成功\n          <Spacer>Address : {account.address.plain()}</Spacer>\n          <Spacer>PublicKey : {account.publicKey}</Spacer>\n        </Spacer>\n      ) : (\n        <Spacer>\n          <Button onClick={login}>LOGIN</Button>\n        </Spacer>\n      )}\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\n// import Contents from './Contents'\nconst App = () => {\n  const codeString = `import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { NetworkType, PublicAccount } from 'symbol-sdk'\nimport { Button } from '@mui/material'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [account, setAccount] = useState<PublicAccount | null>(null)\n\n  const login = () => {\n    if (!window.SSS) {\n      console.log('not installed')\n    } else {\n      console.log('installed', window.SSS.activePublicKey)\n      const acc = PublicAccount.createFromPublicKey(\n        window.SSS.activePublicKey,\n        NetworkType.TEST_NET\n      )\n      setAccount(acc)\n    }\n  }\n\n  return (\n    <Root>\n      {account ? (\n        <Spacer>\n          ログイン成功\n          <Spacer>Address : {account.address.plain()}</Spacer>\n          <Spacer>PublicKey : {account.publicKey}</Spacer>\n        </Spacer>\n      ) : (\n        <Spacer>\n          <Button onClick={login}>LOGIN</Button>\n        </Spacer>\n      )}\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  NamespaceId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [nameSpace, setNameSpace] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const ns = new NamespaceId(nameSpace)\n\n    console.log('onegai', NamespaceId.createFromEncoded(ns.id.toHex()))\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [new Mosaic(new NamespaceId(nameSpace), UInt64.fromUint(1))],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          ネームスペース指定でメッセージを送れます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Mosaic NameSpace\"\n          onChange={(e) => handleChange(e.target.value, setNameSpace)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n","import styled from '@emotion/styled'\nimport { Typography } from '@mui/material'\nimport React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { monokai as style } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport Contents from './Contents'\n\nconst App = () => {\n  const codeString = `import React, { Dispatch, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport {\n  Address,\n  Deadline,\n  Mosaic,\n  NamespaceId,\n  NetworkType,\n  PlainMessage,\n  SignedTransaction,\n  TransactionHttp,\n  TransferTransaction,\n  UInt64,\n} from 'symbol-sdk'\n\ninterface SSSWindow extends Window {\n  SSS: any\n}\ndeclare const window: SSSWindow\n\nfunction App() {\n  const [address, setAddress] = useState<string>('')\n  const [nameSpace, setNameSpace] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const [isRequest, setIsRequest] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isRequest) {\n      window.SSS.requestSign().then((signedTx: SignedTransaction) => {\n        new TransactionHttp('https://sym-test.opening-line.jp:3001')\n          .announce(signedTx)\n          .subscribe(\n            (x) => {\n              console.log('x', x)\n              setIsRequest(false)\n            },\n            (err) => {\n              console.error(err)\n              setIsRequest(false)\n            }\n          )\n      })\n    }\n  }, [isRequest])\n\n  const handleChange = (state: string, setState: Dispatch<string>) => {\n    setState(state)\n  }\n\n  const submit = () => {\n    const ns = new NamespaceId(nameSpace)\n\n    console.log('onegai', NamespaceId.createFromEncoded(ns.id.toHex()))\n    const tx = TransferTransaction.create(\n      Deadline.create(1637848847),\n      Address.createFromRawAddress(address),\n      [new Mosaic(new NamespaceId(nameSpace), UInt64.fromUint(1))],\n      PlainMessage.create(message),\n      NetworkType.TEST_NET,\n      UInt64.fromUint(2000000)\n    )\n\n    window.SSS.setTransaction(tx)\n\n    setIsRequest(true)\n  }\n\n  return (\n    <Root>\n      <Header>\n        <Typography variant=\"h4\">SSS Extension DEMO</Typography>\n        <Typography variant=\"subtitle2\">\n          ネームスペース指定でメッセージを送れます。\n        </Typography>\n      </Header>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Address\"\n          onChange={(e) => handleChange(e.target.value, setAddress)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Message\"\n          onChange={(e) => handleChange(e.target.value, setMessage)}\n        />\n      </Spacer>\n      <Spacer>\n        <TextField\n          fullWidth\n          label=\"Mosaic NameSpace\"\n          onChange={(e) => handleChange(e.target.value, setNameSpace)}\n        />\n      </Spacer>\n      <Spacer>\n        <Flex>\n          <Grid sx={{ flexGrow: 1 }} />\n          <Button variant=\"outlined\" onClick={submit} sx={{ margin: '8px' }}>\n            SSSで署名\n          </Button>\n        </Flex>\n      </Spacer>\n    </Root>\n  )\n}\n\nexport default App\n\nconst Root = styled('div')({\n  margin: '13px',\n  border: '4px solid #B429F9',\n  padding: '16px',\n  boxSizing: 'border-box',\n})\n\nconst Header = styled('div')({\n  marginBottom: '40px',\n})\nconst Spacer = styled('div')({\n  margin: '16px',\n})\n\nconst Flex = styled('div')({\n  display: 'flex',\n})\n  `\n  return (\n    <>\n      <Wrapper>\n        <Contents />\n      </Wrapper>\n      <Wrapper>\n        <Program>\n          <Typography variant=\"h4\">Demo Program</Typography>\n          <SyntaxHighlighter language=\"typescript\" style={style}>\n            {codeString}\n          </SyntaxHighlighter>\n        </Program>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled('div')({\n  margin: '16px',\n})\n\nconst Program = styled('div')({\n  marginTop: '80px',\n})\n","import React from 'react'\nimport { Routes, Route } from 'react-router'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Demo0 from './pages/Demo0'\nimport Demo1 from './pages/Demo1'\nimport Demo2 from './pages/Demo2'\nimport Demo3 from './pages/Demo3'\nimport Demo4 from './pages/Demo4'\nimport Demo5 from './pages/Demo5'\nimport Demo6 from './pages/Demo6'\nimport Demo7 from './pages/Demo7'\nimport Demo8 from './pages/Demo8'\n// import Demo9 from './pages/Demo9'\n// import Demo10 from './pages/Demo10'\n// import Demo11 from './pages/Demo11'\n\nconst Router: React.VFC = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      {/* <BrowserRouter> */}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/demo0\" element={<Demo0 />} />\n        <Route path=\"/demo1\" element={<Demo1 />} />\n        <Route path=\"/demo2\" element={<Demo2 />} />\n        <Route path=\"/demo3\" element={<Demo3 />} />\n        <Route path=\"/demo4\" element={<Demo4 />} />\n        <Route path=\"/demo5\" element={<Demo5 />} />\n        <Route path=\"/demo6\" element={<Demo6 />} />\n        <Route path=\"/demo7\" element={<Demo7 />} />\n        <Route path=\"/demo8\" element={<Demo8 />} />\n      </Routes>\n    </BrowserRouter>\n  )\n}\nexport default Router\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport Router from './Router'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}